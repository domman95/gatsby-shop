{"version":3,"sources":["webpack:///./src/templates/Dumy.js","webpack:///./src/components/Button/index.js"],"names":["Container","styled","article","SingleDumyPage","dumy","data","name","image","tags","description","price","slug","addToCart","React","useContext","MainContext","className","src","asset","fluid","alt","current","onClick","query","ButtonStyled","button","hero","Button","children"],"mappings":"2FAAA,kJAOMA,EAAYC,IAAOC,QAAV,sEAAGD,CAAH,meAiDA,SAASE,EAAT,GAA6C,IAAXC,EAAU,EAAlBC,KAAQD,KACvCE,EAAgDF,EAAhDE,KAAMC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,KAAMC,EAA6BL,EAA7BK,YAAaC,EAAgBN,EAAhBM,MAAOC,EAASP,EAATO,KAGvCC,EADQC,IAAMC,WAAWC,KACzBH,UAER,OACE,kBAACZ,EAAD,KACE,yBAAKgB,UAAU,SACb,yBAAKC,IAAKV,EAAMW,MAAMC,MAAMF,IAAKG,IAAKT,EAAKU,WAE7C,yBAAKL,UAAU,gBACb,uBAAGA,UAAU,OAAOR,GACpB,wBAAIQ,UAAU,SAASV,GACvB,uBAAGU,UAAU,eAAeP,GAC5B,uBAAGO,UAAU,SAAb,IAAuBN,EAAQ,KAC/B,kBAAC,IAAD,CAAQM,UAAU,YAAYM,QAAS,kBAAMV,EAAUR,KAAvD,iBAMD,IAAMmB,EAAK,c,kCC9ElB,2DAIMC,EAJN,UAIqBvB,EAAOwB,OAAV,2EAAGxB,CAAH,45BAWH,qBAAGyB,KAAkB,EAAI,KA+CrB,qBAAGA,KAAkB,mBAAqB,mBAiB9C,SAASC,EAAT,GAAqD,IAAnCC,EAAkC,EAAlCA,SAAkC,IAAxBN,eAAwB,MAAd,KAAc,EAARI,EAAQ,EAARA,KACzD,OACE,kBAACF,EAAD,CAAcF,QAASA,EAASI,KAAMA,GACnCE","file":"component---src-templates-dumy-js-16af95dbc46b89372485.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport styled from \"styled-components\"\r\nimport MainContext from \"../MainContext\"\r\nimport Button from \"../components/Button\"\r\n\r\nconst Container = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px 0;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  .image {\r\n    width: 25%;\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .aboutProduct {\r\n    font-family: var(--roboto);\r\n    padding: 20px;\r\n    max-width: 500px;\r\n    \r\n    .tag {\r\n      color: #FBE067;\r\n      font-size: 14px;\r\n      text-transform: uppercase;\r\n      padding: 15px 0;\r\n    }\r\n\r\n    .title {\r\n      color: #eeeeee;\r\n      font-size: 32px;\r\n    }\r\n\r\n    .description {\r\n      color: #c4c4c4;\r\n      font-size: 18px;\r\n      padding: 10px 0 20px;\r\n    }\r\n\r\n    .price {\r\n      color: #eeeeee;\r\n      font-weight: var(--bold);\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function SingleDumyPage({ data: { dumy } }) {\r\n  const { name, image, tags, description, price, slug } = dumy\r\n\r\n  const context = React.useContext(MainContext)\r\n  const { addToCart } = context\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"image\">\r\n        <img src={image.asset.fluid.src} alt={slug.current} />\r\n      </div>\r\n      <div className=\"aboutProduct\">\r\n        <p className=\"tag\">{tags}</p>\r\n        <h2 className=\"title\">{name}</h2>\r\n        <p className=\"description\">{description}</p>\r\n        <p className=\"price\">${price / 100}</p>\r\n        <Button className=\"addToCart\" onClick={() => addToCart(dumy)}>Add To Cart</Button>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    dumy: sanityDumy(slug: { current: { eq: $slug } }) {\r\n      name\r\n      id\r\n      image {\r\n        asset {\r\n          fluid(maxWidth: 640) {\r\n            ...GatsbySanityImageFluid\r\n          }\r\n        }\r\n      }\r\n      tags\r\n      description\r\n      price\r\n      slug {\r\n        current\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nconst ButtonStyled = styled.button`\r\n    position: relative;\r\n    background: var(--pink);\r\n    border: none;\r\n    color: var(--white);\r\n    padding: 10px 23px;\r\n    margin-top: 30px;\r\n    border-radius: 4px;\r\n    font-size: 13px;\r\n    cursor: pointer;\r\n    font-weight: var(--bold);\r\n    opacity: ${({ hero }) => hero ? 0 : 1};\r\n    animation: showButton .3s linear 1.6s forwards;\r\n    outline: none;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: -6px;\r\n      left: -6px;\r\n      width: 0;\r\n      height: 0;\r\n      border-left: 2px solid white;\r\n      border-top: 2px solid white;\r\n      border-top-left-radius: 4px;\r\n      transition: .3s;\r\n      visibility: hidden;\r\n    }\r\n\r\n    &:hover::before,\r\n    &:focus::before {\r\n      width: 15%;\r\n      height: 50%;\r\n      visibility: visible;\r\n    }\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -6px;\r\n      right: -6px;\r\n      width: 0;\r\n      height: 0;\r\n      border-right: 2px solid white;\r\n      border-bottom: 2px solid white;\r\n      border-bottom-right-radius: 4px;\r\n      transition: .3s;\r\n      visibility: hidden;\r\n    }\r\n\r\n    &:hover::after,\r\n    &:focus::after {\r\n      width: 15%;\r\n      height: 50%;\r\n      visibility: visible;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      transform: ${({ hero }) => hero ? \"translateX(-30%)\" : \"translateX(0)\"};\r\n    }\r\n\r\n    @keyframes move {\r\n        to {\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n        }\r\n    }\r\n\r\n    @keyframes showButton {\r\n        to {\r\n        opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Button({ children, onClick = null, hero }) {\r\n  return (\r\n    <ButtonStyled onClick={onClick} hero={hero}>\r\n      {children}\r\n    </ButtonStyled>\r\n  )\r\n}\r\n"],"sourceRoot":""}